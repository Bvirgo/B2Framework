shaco = {}
shaco.lua = {}
shaco.GameHelper = CS.shaco.GameHelper
shaco.SceneManager = CS.shaco.SceneManager

require("shaco.xlua.UIManager")
require("shaco.xlua.ExtensionsString")
require("shaco.xlua.Log")
cs_coroutine = (require 'shaco.xlua.cs_coroutine')

function try(block)

    -- get the try function
    local try = block[1]
    assert(try)

    -- get catch and finally functions
    local funcs = block[2]
    if funcs and block[3] then
        table.join2(funcs, block[2])
    end

    -- try to call it
    local ok, errors = pcall(try)
    if not ok then

        -- run the catch function
        if funcs and funcs.catch then
            funcs.catch(errors)
        end
    end

    -- run the finally function
    if funcs and funcs.finally then
        funcs.finally(ok, errors)
    end

    -- ok?
    if ok then
        return errors
    end
end

function catch(block)
    -- get the catch block function
    return {catch = block[1]}
end
 
function finally(block)
    -- get the finally block function
    return {finally = block[1]}
end